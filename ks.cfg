#version=RHEL7

# Use CDROM installation media
install
cdrom
cmdline

# Do not tun the Setup Agent on first boot
firstboot --disabled

# System authorization information
auth --enableshadow --passalgo=sha512

firewall --disabled
selinux --disabled

# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

# Network information
network  --bootproto=dhcp --device=eth0 --ipv6=auto --activate --hostname=localhost --noipv6

# Root password
rootpw --plaintext vagrant

# System timezone
timezone --utc Etc/UTC

# System bootloader configuration
bootloader --location=mbr --boot-drive=sda --driveorder=sda --append="clocksource_failover=acpi_pm  crashkernel=auto"

# Partition setup information
clearpart --all --initlabel --drives=sda,sdb
zerombr
part / --ondisk sda --grow --size 2000 --asprimary --fstype=ext4
part swap --ondisk sdb --grow --size 100


# User and group configuration
user --name=vagrant --groups=vagrant,wheel --password=vagrant --plaintext --gecos="Default Vagrant User"
user --name=centos --groups=vagrant,wheel --password=vagrant --plaintext --gecos="Centos user for Ansible scripts"

reboot

%packages
@core
kexec-tools
efibootmgr
%end

%post --log=/root/install-post.log

set -x


echo %_install_langs en_US.utf8 >> /etc/rpm/macros

# No fsck at boot
sed -i -E 's/(defaults[[:space:]]+)1 1/\10 0/' /etc/fstab

# Reduce the delay on boot - set GRUB_TIMEOUT=0 if you don't want a boot menu at all
sed -i 's/GRUB_TIMEOUT.*$/GRUB_TIMEOUT=3/;s/ rhgb quiet//g' /etc/default/grub
grub2-mkconfig -o /boot/grub2/grub.cfg

# Install vagrant keys
mkdir -p /home/vagrant/.ssh
chmod 700 /home/vagrant/.ssh
cd /home/vagrant/.ssh
(echo -n ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrt
 echo -n vp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS
 echo -n 0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPI
 echo -n TAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6ki
 echo -n vAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvx
 echo -n hMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE
 echo 98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key ) \
     >authorized_keys
chown -R vagrant:vagrant /home/vagrant/.ssh

# Import key first so that yum doesn't complain later.
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

# kernel-devel : VirtualBox Guest Additions dependency.
# man : tools are never consistent across platforms.
# nfs-utils : Vagrant's shared folders.
# yum-utils : package-cleanup command.
# alias yum='yum --releasever=7.0'

yum shell -y <<EOM
config exclude cscope ctags doxygen intltool systemtap
update
groupinstall "Development Tools"
install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
install kernel-devel kernel-headers man nfs-utils yum-utils vim
install yum-plugin-versionlock
run
EOM

rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7

sed -i '/.*requiretty/d' /etc/sudoers
echo '%wheel ALL=NOPASSWD: ALL' >> /etc/sudoers
echo 'Defaults:vagrant env_keep +="PATH"' >> /etc/sudoers
sudo sed -i '/Defaults\ *secure_path/c \
Defaults:!vagrant secure_path = /sbin:/bin:/usr/sbin:/usr/bin' /etc/sudoers

echo 'UseDNS no' >> /etc/ssh/sshd_config

chkconfig --level 2345 auditd off
chkconfig --level 2345 crond off
chkconfig --level  345 netfs off
chkconfig --level  345 nfslock off
chkconfig --level 2345 rpcbind off
chkconfig --level  345 rpcgssd off
chkconfig --level  345 rpcidmapd off

# Just keep US English.
find /usr/share/locale -mindepth 1 -maxdepth 1 -type d \
    -not -name en -not -name en_US -not -name 'en@*' \
    -exec rm -rf {} +

localedef --list-archive | \
    grep -vE '^en_US.*' | \
    xargs localedef --delete-from-archive

mv /usr/lib/locale/locale-archive /usr/lib/locale/locale-archive.tmpl
build-locale-archive


# This portion creates a boot script to run after reboot into
# the newly updated kernel and installs Guest Additions
# followed by cleaning up the system so that it can be packed down.
# This section is weird as you need to escape $, `, \, etc.
cat <<EOM >/etc/rc.local
#!/bin/sh -x

touch /var/lock/subsys/local

# alias yum='yum --releasever=7.0'

# If the kernel has been upgraded, remove old versions.
package-cleanup -y --oldkernel --count=1

# Don't upgrade the kernel files after this point.
# VirtualBox Guest Additions will break if it is upgraded.
yum versionlock kernel kernel-devel kernel-doc kernel-firmware kernel-headers

# Mount Guest Additions
for c in \`ls -d /dev/cdrom* /dev/sr*\`
do
    mount -o ro \$c /mnt/

    if [ -x /mnt/VBoxLinuxAdditions.run ]
    then
        break
    else
        umount /mnt/
    fi
done

# VirtualBox Guest Additions
# The "Window System drivers" step will fail which is fine because we
# don't have Xorg
/mnt/VBoxLinuxAdditions.run
chkconfig vboxadd-x11 off
umount /mnt/


# kernel-devel : Installed for VirtualBox Guest Additions
yum shell -y <<EOF
remove kernel-devel
run
EOF


yum clean all  # Remove yum's cache files.
rpm --rebuilddb


EMAIL=root
# Send a summary of what happened in the installation.
FILES=\`ls /var/log/boot.log /root/install-post.log \\
          /root/install.log /root/install.log.syslog\`
(echo -en "To: \${EMAIL}\\r\\n" ;
 echo -en "Subject: CentOS Installation Summary\\r\\n\\r\\n" ;
 echo -en "Full package list:\\r\\n\\r\\n" ;
 rpm -qa | sort ;
 for f in \${FILES}; do
   echo -en "\\r\\n\\r\\n\$f:\\r\\n\\r\\n" ;
   sed 's/^/    /' \$f && rm -f \$f ;
 done ) | sendmail \${EMAIL}

sleep 10 # Give postfix a bit of time to send the email.
service postfix stop # Kill postfix so we can clear logs.

rm -f /var/log/dmesg.old /var/log/anaconda.ifcfg.log \\
      /var/log/anaconda.log /var/log/anaconda.program.log \\
      /var/log/anaconda.storage.log /var/log/anaconda.syslog \\
      /var/log/anaconda.yum.log /root/anaconda-ks.cfg \\
      /var/log/vboxadd-install.log /var/log/vbox-install-x11.log \\
      /var/log/VBoxGuestAdditions.log /var/log/vboxadd-install-x11.log
echo -n | tee /var/log/dmesg /var/log/maillog /var/log/lastlog \\
              /var/log/secure /var/log/yum.log >/var/log/cron

chkconfig --level 2345 auditd on
chkconfig --level 2345 crond on
chkconfig --level  345 netfs on
chkconfig --level  345 nfslock on
chkconfig --level 2345 rpcbind on
chkconfig --level  345 rpcgssd on
chkconfig --level  345 rpcidmapd on
chkconfig --level 2345 sshd on


rm -rf /tmp/* /tmp/.[^.]+
dd if=/dev/zero of=/tmp/clean bs=1M || rm -f /tmp/clean


swapuuid=\`blkid -o value -l -s UUID -t TYPE=swap\`
swappart=\`readlink -f /dev/disk/by-uuid/\$swapuuid\`

swapoff \$swappart
dd if=/dev/zero of=\$swappart bs=1M
mkswap -U \$swapuuid \$swappart


cat <<EOF >/etc/rc.local && poweroff
#!/bin/sh

touch /var/lock/subsys/local
EOF

EOM

# set rc.local to run on reboot
chmod a+x /etc/rc.local

%end

# The VM should shut itself off after sucessful install,
# if the VM is still running when you're done
# something has gone wrong.
